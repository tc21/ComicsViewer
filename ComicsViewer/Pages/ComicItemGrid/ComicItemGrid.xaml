<Page
    x:Class="ComicsViewer.Pages.ComicItemGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="using:ComicsViewer.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="using:ComicsViewer.Controls"
    mc:Ignorable="d"    
    d:RequestedTheme="Dark"
    Background="Transparent">

    <Page.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="ComicItemTemplate" x:DataType="vm:ComicItem">
                <Grid Margin="4">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0">
                        <Grid x:Name="ComicItemThumbnailContainer" >
                            <Image x:Name="ComicItemThumbnail" Source="{x:Bind ThumbnailImage, Mode=OneWay}" />

                            <Grid Visibility="{x:Bind IsLoved, Mode=OneWay}">
                                <Polygon Points="0,0 40,40 0,40" Fill="#EF386A" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                                <FontIcon Glyph="&#xEB52;" FontSize="14" Margin="4" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <TextBlock Grid.Row="1" 
                               Text="{x:Bind Title, Mode=OneWay}" 
                               Style="{StaticResource ItemTitleStyle}"/>
                    <TextBlock Grid.Row="2" 
                               Text="{x:Bind Subtitle, Mode=OneWay}"
                               Style="{StaticResource ItemSubtitleStyle}"/>
                </Grid>
            </DataTemplate>
            <ItemsPanelTemplate x:Key="HorizontalItemsWrapGridTemplate">
                <ItemsWrapGrid Orientation="Horizontal"/>
            </ItemsPanelTemplate>

            <Style x:Key="ComicItemContainerStyle" TargetType="GridViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="ItemTitleStyle">
                <Style.Setters>
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="Foreground" Value="{ThemeResource SystemControlPageTextBaseHighBrush}" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style.Setters>
            </Style>
            <Style TargetType="TextBlock" x:Key="ItemSubtitleStyle">
                <Style.Setters>
                    <Setter Property="FontSize" Value="10" />
                    <Setter Property="Foreground" Value="{ThemeResource SystemControlPageTextBaseMediumBrush}" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style.Setters>
            </Style>
            <Style TargetType="ComboBox" x:Key="InlineComboBoxStyle">
                <Style.Setters>
                    <Setter Property="Padding" Value="4 0" />
                    <Setter Property="BorderThickness" Value="1" />
                </Style.Setters>
            </Style>

            <MenuFlyout x:Name="ComicItemGridContextFlyout" 
                        x:Key="ComicItemGridContextFlyout"
                        Opening="ComicItemGridContextFlyout_Opening">
                <uc:ComicsMenuFlyoutItem SymbolIcon="OpenFile"
                                         Command="{x:Bind ContextMenuCommands.OpenItemsCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="O" />
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
                <uc:ComicsMenuFlyoutItem SymbolIcon="OpenPane"
                                         Command="{x:Bind ContextMenuCommands.NavigateIntoCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Enter" />
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
                <uc:ComicsMenuFlyoutItem SymbolIcon="Edit"
                                         Command="{x:Bind ContextMenuCommands.EditItemCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="I" />
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
                <uc:ComicsMenuFlyoutItem FontIcon="&#xEB51;"
                                         Command="{x:Bind ContextMenuCommands.LoveComicsCommand}"/>
                <MenuFlyoutSeparator/>
                <uc:ComicsMenuFlyoutItem FontIcon="&#xE721;"
                                         Command="{x:Bind ContextMenuCommands.SearchSelectedCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>

                        <KeyboardAccelerator Key="Back" />
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
                <uc:ComicsMenuFlyoutItem FontIcon="&#xE77B;"
                                         Command="{x:Bind ContextMenuCommands.SearchAuthorCommand}"/>
                <uc:ComicsMenuFlyoutItem FontIcon="&#xEC50;"
                                         Command="{x:Bind ContextMenuCommands.ShowInExplorerCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="E" />
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
                <MenuFlyoutSeparator/>

                <MenuFlyoutSubItem Text="Playlist">
                    <MenuFlyoutSubItem.Icon>
                        <FontIcon Glyph="&#xE8FD;"/>
                    </MenuFlyoutSubItem.Icon>

                    <uc:ComicsMenuFlyoutItem FontIcon="&#xECC8;"
                                             Command="{x:Bind ContextMenuCommands.AddToPlaylistCommand}"/>
                    <uc:ComicsMenuFlyoutItem FontIcon="&#xECC9;"
                                             Command="{x:Bind ContextMenuCommands.RemoveFromSelectedPlaylistCommand}"/>
                    <uc:ComicsMenuFlyoutItem SymbolIcon="Add"
                                             Command="{x:Bind ContextMenuCommands.CreatePlaylistCommand}"/>
                    <uc:ComicsMenuFlyoutItem FontIcon="&#xE74D;"
                                             Command="{x:Bind ContextMenuCommands.DeletePlaylistCommand}"/>
                </MenuFlyoutSubItem>
                
                <MenuFlyoutSubItem Text="Thumbnails">
                    <MenuFlyoutSubItem.Icon>
                        <FontIcon Glyph="&#xE91B;"/>
                    </MenuFlyoutSubItem.Icon>

                    <uc:ComicsMenuFlyoutItem FontIcon="&#xE91B;"
                                             Command="{x:Bind ContextMenuCommands.GenerateThumbnailCommand}"/>
                    <uc:ComicsMenuFlyoutItem FontIcon="&#xE7C5;"
                                             Command="{x:Bind ContextMenuCommands.RedefineThumbnailCommand}">
                        <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="Control,Shift" Key="R" />
                        </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                    </uc:ComicsMenuFlyoutItem>
                </MenuFlyoutSubItem>
                <uc:ComicsMenuFlyoutItem SymbolIcon="MoveToFolder"
                                         Command="{x:Bind ContextMenuCommands.MoveFilesCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="M" />
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
                <uc:ComicsMenuFlyoutItem SymbolIcon="Delete"
                                         Command="{x:Bind ContextMenuCommands.RemoveItemCommand}">
                    <uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="Delete"/>
                    </uc:ComicsMenuFlyoutItem.KeyboardAccelerators>
                </uc:ComicsMenuFlyoutItem>
            </MenuFlyout>

            <uc:PagedFlyout x:Name="ComicInfoFlyout"
                            ShouldConstrainToRootBounds="False">
                <uc:PagedFlyout.FlyoutPresenterStyle>
                    <Style TargetType="FlyoutPresenter">
                        <Style.Setters>
                            <Setter Property="CornerRadius" Value="4"/>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                        </Style.Setters>
                    </Style>
                </uc:PagedFlyout.FlyoutPresenterStyle>
            </uc:PagedFlyout>
            
            <!-- ReSharper disable Xaml.RedundantResource
                 these are overrides for built-in resources which whill apply automatically -->

            <SolidColorBrush x:Key="ComboBoxForeground" Color="{ThemeResource SystemAccentColorLight3}"/>
            <SolidColorBrush x:Key="ComboBox" Color="{ThemeResource SystemAccentColorLight3}"/>
            <SolidColorBrush x:Key="ComboBoxBorderBrush" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBoxBackground" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBoxBackgroundPointerOver" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBoxBackgroundPressed" Color="Transparent"/>
            <SolidColorBrush x:Key="ComboBoxBackgroundUnfocused" Color="Transparent"/>
            
            <!-- Note: This doesn't work for some reason. I found this bug but it says it should work as long as it's not
                 at the application level (app.xaml). oh well... (microsoft/microsoft-ui-xaml/issues/1486) -->
            <x:Double x:Key="ContentDialogMaxWidth">1000</x:Double>

            <!-- ReSharper restore Xaml.RedundantResource -->
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid x:Name="ContainerGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="4">
                <TextBlock Text="Sort By:" Margin="4 0" VerticalAlignment="Center" HorizontalAlignment="Center" />
                <ComboBox ItemsSource="{x:Bind ViewModel.SortSelectors}"
                          SelectedIndex="{x:Bind ViewModel.SelectedSortIndex, Mode=TwoWay}"
                          Style="{StaticResource InlineComboBoxStyle}" />
            </StackPanel>

            <GridView x:Name="VisibleComicsGrid"
                      Grid.Row="1"
                      SelectionMode="Extended"
                      ItemsSource="{x:Bind ViewModel.ComicItems, Mode=OneWay}"
                      Loaded="VisibleComicsGrid_Loaded"
                      IsRightTapEnabled="True"
                      Tapped="VisibleComicsGrid_Tapped"
                      DoubleTapped="VisibleComicsGrid_DoubleTapped"
                      RightTapped="VisibleComicsGrid_RightTapped"
                      CanDragItems="True"
                      DragItemsStarting="VisibleComicsGrid_DragItemsStarting"
                      DragItemsCompleted="VisibleComicsGrid_DragItemsCompleted"
                      AllowDrop="True"
                      DragOver="VisibleComicsGrid_DragOver"
                      Drop="VisibleComicsGrid_Drop"
                      SizeChanged="VisibleComicsGrid_SizeChanged"
                      ItemTemplate="{StaticResource ComicItemTemplate}"
                      ItemContainerStyle="{StaticResource ComicItemContainerStyle}"
                      ItemsPanel="{StaticResource HorizontalItemsWrapGridTemplate}">
            </GridView>
        </Grid>

        <ContentDialog x:Name="ConfirmRemoveItemDialog" 
                       Title="Confirm remove items"
                       Content="Are you sure you want to remove these items? You will have to import them again if you want them to show up in this library."
                       PrimaryButtonText="Remove"
                       CloseButtonText="Cancel"
                       DefaultButton="Close"/>
    </Grid>
</Page>
