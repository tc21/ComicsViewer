<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ComicsViewer.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="userControl"
    x:Class="ComicsViewer.Controls.ExpandableChecklist"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:RequestedTheme="Dark"
    d:DesignWidth="400">
    <UserControl.Resources>
        <Style TargetType="HyperlinkButton">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="4 0"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemAccentColorLight3}"/>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!-- We have made the "unset" state identical to collapsed. -->
                <VisualState x:Name="Collapsed">
                    <Storyboard x:Name="CollapsingStoryboard">
                        <DoubleAnimation Duration="0:0:0.16" Storyboard.TargetName="IndicatorIcon"
                          Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="0"/>
                        <DoubleAnimation Duration="0:0:0.16" Storyboard.TargetName="ItemList" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" To="0"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemList" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.08" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Expanded">
                    <Storyboard x:Name="ExpandingStoryboard">
                        <DoubleAnimation Duration="0:0:0.16" Storyboard.TargetName="IndicatorIcon"
                          Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="90"/>
                        <DoubleAnimation Duration="0:0:0.16" Storyboard.TargetName="ItemList"       Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" To="1"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemList" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.08" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ToggleButton x:Name="HeaderToggleButton"
                      Height="40" 
                      Padding="0" 
                      Background="Transparent"
                      HorizontalAlignment="Stretch" 
                      HorizontalContentAlignment="Stretch"
                      Checked="HeaderToggleButton_Checked"
                      Unchecked="HeaderToggleButton_Unchecked">
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <FontIcon x:Name="IndicatorIcon" Grid.Column="0" Glyph="&#xE76C;" FontSize="12" Margin="12 0" RenderTransformOrigin="0.5 0.5">
                    <FontIcon.RenderTransform>
                        <RotateTransform />
                    </FontIcon.RenderTransform>
                </FontIcon>
                <TextBlock Grid.Column="1"
                           Text="{x:Bind Header}" 
                           VerticalAlignment="Center" />
                <StackPanel x:Name="SelectedItemsIndicator" 
                            Grid.Column="2" 
                            Margin="8 0 0 0" 
                            VerticalAlignment="Center" 
                            Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource DimmedTextStyle}" />
                    </StackPanel.Resources>

                    <TextBlock x:Name="SelectedItemsCounter"/>
                    <TextBlock Text="/"/>
                    <TextBlock Text="{x:Bind itemListItemsSource.Count}"/>
                    <TextBlock Text=" Selected"/>
                </StackPanel>
                <!-- Space reserved for a potential select all button -->
                <HyperlinkButton x:Name="DeselectAllButton" 
                                 Grid.Column="4" 
                                 Content="Deselect All" 
                                 Margin="0 0 12 0" 
                                 Tapped="DeselectAllButton_Tapped"
                                 Visibility="Collapsed"/>
            </Grid>
        </ToggleButton>

        <ItemsControl x:Name="ItemList" Grid.Row="1"
                      ItemsSource="{Binding ItemsSource, ElementName=userControl}"
                      RenderTransformOrigin="0.5 0">
            <ItemsControl.RenderTransform>
                <CompositeTransform ScaleY="0"/>
            </ItemsControl.RenderTransform>
            <ItemsControl.ItemTemplate>
                <DataTemplate x:DataType="local:CountedStringCheckBoxItem">
                    <Border Margin="0" Height="40">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0"
                                      x:Name="ItemNameCheckBox"
                                      Content="{x:Bind Item.Name}" 
                                      IsChecked="{x:Bind IsChecked, Mode=TwoWay}"
                                      HorizontalAlignment="Stretch"
                                      Checked="ChecklistItem_Checked"
                                      Unchecked="ChecklistItem_Unchecked"/>
                            <TextBlock Grid.Column="1" 
                                       Text="{x:Bind Item.Count}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource DimmedTextStyle}"
                                       Margin="12 0"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Template>
                <ControlTemplate>
                    <Border>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" DataContextChanged="ScrollViewer_DataContextChanged">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>

    </Grid>
</UserControl>
